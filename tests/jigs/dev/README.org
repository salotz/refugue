* Setting Up an environment for testing refugue

This is a bit of a delicate matter since it involves global stuff like
users and their home directories.

There is mechanisms for not using these for users but they are
advanced features, and we need to test the basic features first before
we move on to testing these advanced ones.

Here is my notes for setting this up. It should be transferred into a
'mock' plugin group for testing mock users and such.

** Setting up for testing

Quickstart:

#+begin_src bash
inv --prompt-for-sudo-password admin.setup
#+end_src

*** Full Description

We will be making a set of new users that will be able to install the
in-development refugue code, so we will need a group to include all of
these users which will be called ~refugue-test~.

To double check all the members are in it:

#+begin_src bash
members refugue-test
#+end_src

Which must be installed ~sudo apt install members~.

So first we create and add the current user to the groups specified in
the config:

#+begin_src bash
inv --prompt-for-sudo-password admin.add-curr-user-groups
#+end_src

Now we can configure the repo directory so that the groups have access
to them. This is needed for other temporary users to be able to
install it editably:

#+begin_src bash
inv --prompt-for-sudo-password chown-repo
#+end_src


There are some invoke targets that read a spec for a set of users and
create them automatically for you:

#+begin_src bash
inv --prompt-for-sudo-password admin.users
#+end_src

This reads the ~users.toml~ file based on the config option:
~DEFAULT_USER_SPEC~.

You can generate a password for them with ~pwgen~:

#+begin_src bash
pwgen 8 1
#+end_src

You can also make a ~skel~ template dir for it as well, based on the
~SKEL_DIR~ configuration option.

Run the other commands to clean up after yourself etc.

#+begin_src bash
inv admin.clean
#+end_src


** Configuring the ~refugue~ network

After you have set up a clean set of users for the testing you need to
configure the ~refugue~ network.

This is in the ~skel/.config/refugue/config.py~ file which will be copied to
a new users directory for easy out of the box configuration.

Right now our tests include real hardware for:

- local thumb drive :: ~boxwood~
- VPS server host :: ~junco~ at domain ~junco.salotz.info~
- local host :: ~ostrich~

# TODO: get an attached drive to another computer, maybe raspberry pi
# or laptop

** Running tests

As of now I don't have automated tests since there is already a lot of
semi-manual and host-specific configuration that needs done as
described above.

So for now in the early stages just go ahead and log in as a user and
activate the dev environment.

#+begin_src bash
su refugue-test_00 # Vae7Quae
source _venv/dev/bin/activate
cd $HOME
#+end_src

#+begin_src bash
  refugue \
      --transport rsync \
      --protocol one-way-sync \
      --source ostrich --target boxwood
#+end_src

etc.

